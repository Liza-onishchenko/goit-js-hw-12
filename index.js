import{a as w,S as E,i as n}from"./assets/vendor-DOgVoBmD.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const h of o.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&i(h)}).observe(document,{childList:!0,subtree:!0});function s(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(r){if(r.ep)return;r.ep=!0;const o=s(r);fetch(r.href,o)}})();const b="https://pixabay.com/api/",v="45541862-830ec78a7fc3c846a462bfeb1",g=async(e,t)=>{const s={params:{key:v,q:e,image_type:"photo",orientation:"horizontal",safesearch:"true",page:t,per_page:15}};return w.get(`${b}`,s)},y=e=>`
    <li class="gallery-card">
      <a href="${e.largeImageURL}">
        <img class="gallery-img" src="${e.webformatURL}" alt="${e.tags}" />
      </a> 
      <ul>
        <li>likes: ${e.likes}</li>
        <li>views: ${e.views}</li>
        <li>comments: ${e.comments}</li>
        <li>downloads: ${e.downloads}</li>
      </ul>
    </li>
    `,P=(e,t,s)=>{const i=e.map(y).join("");t.innerHTML=i,s.refresh()},p=e=>{document.querySelector(".loader").classList.remove("is-hidden")},f=e=>{document.querySelector(".loader").classList.add("is-hidden")},c=document.querySelector(".js-search-form"),d=document.querySelector(".js-gallery"),L=document.querySelector(".loader"),S=new E(".gallery-card a"),u=document.querySelector(".js-load-more");let a=1;const m=15;let l="";const q=async e=>{try{if(e.preventDefault(),l=c.elements.user_query.value.trim(),a=1,d.innerHTML="",u.classList.add("is-hidden"),l===""){n.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight"});return}p(L);const t=await g(l,a,m);if(t.data.hits.length===0){n.warning({title:"No results",message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight"});return}P(t.data.hits,d,S),u.classList.remove("is-hidden")}catch(t){n.error({title:"Error",message:"Something went wrong! Please try again later.",position:"topRight"}),console.error("Error fetching images:",t)}finally{f(),c.elements.user_query.value=""}},M=async e=>{try{p(L),a++;const t=await g(l,a,m);d.insertAdjacentHTML("beforeend",t.data.hits.map(y).join("")),S.refresh(),c.reset();const s=Math.ceil(t.data.totalHits/m);a>=s&&(u.classList.add("is-hidden"),n.info({message:"We're sorry, but you've reached the end of search results",position:"topRight"})),R()}catch(t){console.log(t)}finally{f()}},R=()=>{const{height:e}=d.firstElementChild.getBoundingClientRect();window.scrollBy({top:e*2,behavior:"smooth"})};c.addEventListener("submit",q);u.addEventListener("click",M);
//# sourceMappingURL=index.js.map
